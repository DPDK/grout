# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) 2025 Robin Jarry
---
name: Apply

on:
  pull_request_target:
    types: [labeled]

permissions:
  contents: write
  pull-requests: write

jobs:
  apply:
    if: github.event.label.name == 'applied'
    runs-on: ubuntu-latest
    steps:
      - name: Ensure actor has required permissions
        uses: actions/github-script@v7
        with:
          script: |
            const number = context.payload.pull_request.number;
            const actor = context.actor;
            const { data: collab } = await github.rest.repos.getCollaboratorPermissionLevel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              username: actor
            });
            if (!['admin', 'write'].includes(collab.permission)) {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: number,
                name: 'applied',
              });
              const label = `https://github.com/${context.repo.owner}/${context.repo.repo}/labels/applied`;
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: number,
                body: `@${actor}, you are not allowed to add the ${label} label. It has been removed. Only users with write/admin can trigger this workflow.`
              });
              core.setFailed(`@${actor} does not have permissions to trigger this workflow`);
              process.exit(1);
            }

      - uses: actions/checkout@v4
        if: success()
        with:
          fetch-depth: 0
          fetch-tags: true
          persist-credentials: false

      - name: Generate grout-bot app token
        if: success()
        uses: actions/create-github-app-token@v2
        id: app
        with:
          app-id: ${{ secrets.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}

      - run: .github/workflows/apply.sh
        if: success()
        env:
          GH_TOKEN: ${{ steps.app.outputs.token }}
          CLONE_URL: ${{ github.event.pull_request.head.repo.clone_url }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
